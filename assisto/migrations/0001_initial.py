# Generated by Django 4.1.7 on 2023-06-03 18:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commune_fr', models.CharField(max_length=255)),
                ('commune_ar', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_fr', models.CharField(max_length=255)),
                ('profession_ar', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Proof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proof_fr', models.CharField(max_length=255)),
                ('proof_ar', models.CharField(max_length=255)),
                ('proof_abr', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province_fr', models.CharField(max_length=255)),
                ('province_ar', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cin_num', models.CharField(max_length=255, null=True, unique=True)),
                ('cnc_num', models.CharField(max_length=255, null=True, unique=True)),
                ('rc_num', models.CharField(max_length=255, null=True, unique=True)),
                ('user_nom', models.CharField(max_length=255)),
                ('user_tel', models.CharField(max_length=255)),
                ('user_email', models.EmailField(max_length=255)),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assisto.commune')),
                ('profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.profession')),
                ('proof', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.proof')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assisto.province')),
            ],
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('soc_id', models.AutoField(primary_key=True, serialize=False)),
                ('rc_pdf', models.CharField(max_length=255)),
                ('nom_gerant', models.CharField(max_length=255)),
                ('rc_num', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.users')),
            ],
        ),
        migrations.CreateModel(
            name='ProofDesc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_tf', models.CharField(max_length=255)),
                ('num_refe', models.CharField(max_length=255)),
                ('nom', models.CharField(max_length=255)),
                ('nom_memb', models.CharField(max_length=255)),
                ('numreo', models.CharField(max_length=255)),
                ('p_date', models.DateField()),
                ('nom_prenom_president', models.CharField(max_length=255)),
                ('cercle', models.CharField(max_length=255)),
                ('duree', models.CharField(max_length=255)),
                ('tele', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255)),
                ('pdf_name', models.CharField(max_length=255)),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assisto.commune')),
                ('proof', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.proof')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assisto.province')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.users')),
            ],
        ),
        migrations.CreateModel(
            name='Particulier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cin_pdf', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_naissance', models.DateField()),
                ('adresse', models.CharField(max_length=255)),
                ('cin_num', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.users')),
            ],
        ),
        migrations.CreateModel(
            name='Cooperative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnc_pdf', models.CharField(max_length=255)),
                ('nom_president', models.CharField(max_length=255)),
                ('cnc_num', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assisto.users')),
            ],
        ),
        migrations.AddField(
            model_name='commune',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assisto.province'),
        ),
    ]
